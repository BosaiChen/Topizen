公共页:
/* feature topic*/
1. [解决] 用户是否已follow判断	
#####################
搞定！(在和每个feature topic信息数组中，有一个relation参数，true表示用户关注该topic,false表示用户不关注该topic)
#####################

2.(解决)话题背景图(类似用户头像) 
#####################
基本搞定 (数据表我更新了，加在了new_db.txt里面，读取的时候public_c页面加载的时候在每个feature topic信息数组中有一个bg_img参数，记录背景图片路径。） 
但是问题是这个背景图片是何时上传的？话题孵化前有么？ 这个没有搞定
----------------
背景图由编辑上传，在内容管理系统中完成
----------------
#####################

===========================
话题页:
/* 基本信息加载 */
1.[解决]话题贡献者得建个新表，记录tid, uid , 成为的时间，取消的时间		搞定,没有新建表,现有表可以满足
2.[解决]是否是crazy 话题的判断											搞定
3.话题tag的相关表，和数据库读写。tag和话题是多对多关系，一tag下有多个话题，一话题对应多个tag 搞定！
######################
（tag的输入是什么时候？是创建话题的时候由用户输入？最好能详细的说一下tag的产生和使用场合）
-------------------------
2种方式产生Tag: 1.用户创建话题（孵化器）  2.后台编辑创建话题时指定Tag或修改现有话题的Tag
使用情况:在以下页面出现（话题单页，话题孵化器）
-------------------------
######################

//话题tag表
//tid:话题id
//tag:话题下的tag信息(最长1000个英文字符,333个汉字)
//tag_num:保留,为以后可以多个tag归属于一个tag_num下（可以满足简单的tag聚合后的推荐）
//topic_type：话题类型（0:没有成为最终话题的话题;1:已经成为大家讨论的话题）
CREATE TABLE IF NOT EXISTS `topic_tag_table` (
  `tid` bigint(20) unsigned NOT NULL DEFAULT '0',		
  `tag` varchar(220) NOT NULL DEFAULT '',
  `tag_num` int(10) unsigned NOT NULL DEFAULT '0',
  `topic_type` tinyint(3) unsigned NOT NULL DEFAULT '0',		
  PRIMARY KEY (`tid`,`tag`),
  KEY `tag_num` (`tag_num`),
  KEY `topic_type` (`topic_type`),
  KEY `tag` (`tag`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;





/* 关注该话题的好友列表 */	搞定
1.3兴趣值，姓名，介绍(一次默认显示3个，可以在n个里面随即选3个)
######################
没搞定
这个好友是什么意思？我关注的人还是关注我的人？
---------------------
应该是我关注的人
--------------------
######################



/*相关话题推荐*/
1.3兴趣值，标题(一次默认显示3个，可以在n个里面随即选3个)(先只做同tag内的话题推荐)


问题：同tag，一个话题有多个tag，推荐的话是怎么作？只要有一个tag相同就推荐？还是需要满足百分之多少的tag相同才推荐？

#############################
tag的值是固定的一些么？如果不是的话，如何聚合相同意思的tag？这些东西应该都是在搜索系统里面创建的索引，然后应用层直接使用，帮忙问问卢他找到人做搜索了么？我现在没时间帮他重新建立一个搜索系统，只能给建议
-----------------------------
或者先做个简单的的，人工指定Tag,这里推荐同个Tag下得其他话题?
------------------------------
#############################





===============================
帖子页:
/*回复*/

//post.php下的create_post完成发帖子的功能,数据库信息见new_db.txt

1.帖子单页基本信息的显示（页面参数见参数文档）
2.回复的建库和数据库读写		
3.发comment功能:接受唯一前台参数:comment内容


##########################
你那天还说了一个帖子需要有标题，是么？
-----------------------------
恩
-----------------------------
##########################

